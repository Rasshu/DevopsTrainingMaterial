Lab 4 - in same project
 Keep javac in build stage and shift java in test stage
 -Error -> for image in test state (add image tag to that stage)
        -> class not found
             create an issue for classnot found, assign to yourself
Modify pipeline, build stage to include artifact section
  artifacts:
    untracked: false
    when: on_success
    expire_in: 30 days
    paths:
      - "Demo1.class"  
 run 
  success, observe message for creating/download artifacts
 for pipeline -> download artifact
 
 close issue
           
Lab 3 - in same project
 Create .java file -> HelloWorld.java
  Modify pipleline to compile code and run the same
       HelloWorld.java
         public class HelloWorld{
          public static void main(String[] args){
              System.out.println("Hello World 1.0!!!");
          }
         }
    compile 
      javac HelloWorld.java
    run
      java HelloWorld
   Observe Error for java -> compilation not possible as image is ruby
   ------------> modify pipeline/job to include image
       build-job:       # This job runs in the build stage, which runs first.
         image: java:8
   ---> successful
   Modify HelloWorld.java and observe execution of pipeline started
   
Lab 2 -  Go to repo
    Create Pipeline -> editor 
      edit something- save (automatically invoked)
      Observe -> stages / Jobs -> Run -> Monitor (Jobs -> Console -> Docker Containers)
    edit pipeline to create one more job in deploy stage 
        run and check

Lab1 -  GitLab Web
  Group -> Create group -> tmpdemo1
  Project -> new project in group - proj1
    Repo -> initialize with readme
      Observe -> Web IDE
        Check gitlab features -> repository feature 
